{
	"info": {
		"_postman_id": "de270bad-a502-4ae3-99a4-caa9defc0c30",
		"name": "Activitiez",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14315765"
	},
	"item": [
		{
			"name": "test two endpoints",
			"item": [
				{
					"name": "Get Weather Forecast",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/weatherforecast",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"weatherforecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities/039835bb-0673-4088-8d29-512869c5533d",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"039835bb-0673-4088-8d29-512869c5533d"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Crud operations for activity",
			"item": [
				{
					"name": "Get Activities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities/d9b7fbad-e466-40ff-8ecc-47a4dba61e9b",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d9b7fbad-e466-40ff-8ecc-47a4dba61e9b"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"{{$guid}}\",\n\t\"title\": \"Test Create Activity1333311245\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Create Activity updated 2\",\n\t\"description\": \"Description of the test event updated\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London updated\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/d9aaffee-d5b4-4d74-b109-8b324a9deede",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d9aaffee-d5b4-4d74-b109-8b324a9deede"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/d9aaffee-d5b4-4d74-b109-8b324a9deede",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d9aaffee-d5b4-4d74-b109-8b324a9deede"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Testing error messages",
			"item": [
				{
					"name": "Get non existant activity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/039835bb-0673-4088-8d29-512869c5533d",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"039835bb-0673-4088-8d29-512869c5533d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Empty Activity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity missing fields",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/795fead9-2476-4995-97e6-da5ee20b95f5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"795fead9-2476-4995-97e6-da5ee20b95f5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity correct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Create Activity updated\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Values 404 example",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/values/666",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"values",
								"666"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non existent activity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/d51e33de-105b-4549-96d9-8ba2c7b05a30",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"d51e33de-105b-4549-96d9-8ba2c7b05a30"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test user endpoints",
			"item": [
				{
					"name": "Get Activites Test Base Controller no auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user successful",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user validation error",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user bad password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"badpassword\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user bad email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"fake@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activites no auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity no auth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/activities/692ebbe6-a5ba-4e9d-9224-a8472c17b179",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"692ebbe6-a5ba-4e9d-9224-a8472c17b179"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity with auth",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImJvYiIsIm5hbWVpZCI6ImI4NjcyZTU4LTE5NjUtNDk2Mi04NzM4LTNhMmM3YTY0OThiZiIsImVtYWlsIjoiYm9iQHRlc3QuY29tIiwibmJmIjoxNjcwMzQ0NzMzLCJleHAiOjE2NzA5NDk1MzMsImlhdCI6MTY3MDM0NDczM30.vZUEvhLMO2JgYToEW2hm6CHK4xEc_EqhbRGBC8FqOSvIwuq8_CXpMYNmG8AmnbyaEA7nzpIwl6-m__sStbAQFQ",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/160e70dc-66b3-49e7-8c8e-38ba44106d60",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"160e70dc-66b3-49e7-8c8e-38ba44106d60"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user successfull",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"jim@test.com\",\n\t\"username\": \"jim\",\n\t\"displayName\": \"James\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user validation error",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"sally@test.com\",\n\t\"username\": \"sally\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user duplicate email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"username\": \"fakebob\",\n\t\"displayName\": \"Bob\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user duplicate username",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"fakebob@test.com\",\n\t\"username\": \"bob\",\n\t\"displayName\": \"FakeBob\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user weak password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"letmein@test.com\",\n\t\"username\": \"LetMeIn\",\n\t\"displayName\": \"Let Me In\",\n\t\"password\": \"letmein\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImJvYiIsIm5hbWVpZCI6ImI4NjcyZTU4LTE5NjUtNDk2Mi04NzM4LTNhMmM3YTY0OThiZiIsImVtYWlsIjoiYm9iQHRlc3QuY29tIiwibmJmIjoxNjcwMzQ3MjcwLCJleHAiOjE2NzA5NTIwNzAsImlhdCI6MTY3MDM0NzI3MH0.v4OIUySe4tsYYgZ1kcI68LEGxfDS03BsLEp1kjCltqACWTLg4QzNemhhK5FfgkXqyyTZ0OMrjHSGJ_gbWvyVkA"
							}
						],
						"url": {
							"raw": "{{url}}/api/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test login and manage activities as a user",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Activity current user host",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// response to be 200",
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"{{$guid}}\",\n\t\"title\": \"Test event with bob as host\",\n\t\"description\": \"Description of the test event\",\n\t\"category\":\"drinks\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"London venue\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data[0]).to.have.property('id');",
									"    pm.expect(data[0]).to.have.property('title');",
									"    pm.expect(data[0]).to.have.property('description');",
									"    pm.expect(data[0]).to.have.property('date');",
									"    pm.expect(data[0]).to.have.property('city');",
									"    pm.expect(data[0]).to.have.property('venue');",
									"    pm.expect(data[0]).to.have.property('attendees');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is created\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data).to.have.property('id');",
									"    pm.expect(data).to.have.property('title');",
									"    pm.expect(data).to.have.property('description');",
									"    pm.expect(data).to.have.property('date');",
									"    pm.expect(data).to.have.property('city');",
									"    pm.expect(data).to.have.property('venue');",
									"    pm.expect(data).to.have.property('attendees');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/5bbff03b-cfc6-4dc4-b116-cd71b87f80d4",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"5bbff03b-cfc6-4dc4-b116-cd71b87f80d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add attendance as bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/01297c18-3be9-4bf6-95ce-318140608a05/attend",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"01297c18-3be9-4bf6-95ce-318140608a05",
								"attend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove attendance for user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/a172ad68-5022-40f5-a2d2-801020f7839a/attend",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"a172ad68-5022-40f5-a2d2-801020f7839a",
								"attend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel activity by host",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 400\", function() {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/b8759f1c-5441-4130-a472-c8cfc3d46d76/attend",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"b8759f1c-5441-4130-a472-c8cfc3d46d76",
								"attend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as tom and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('tom_token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"tom@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity as Bob who is host",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Editing activity as bob the host\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/563116a8-6369-4cdb-ba35-b29754308d86",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"563116a8-6369-4cdb-ba35-b29754308d86"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Activity as Tom not host",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(14, 'days').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Editing activity as tom - not host should fail with 403\",\n\t\"description\": \"Description of the test event\",\n\t\"category\": \"Culture\",\n\t\"date\": \"{{activityDate}}\",\n\t\"city\": \"London\",\n\t\"venue\": \"Tower of London\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/activities/788d8631-0256-4d4a-a3d7-0253036db0e9",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"788d8631-0256-4d4a-a3d7-0253036db0e9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete activity as Tom not host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/2ee2335f-aef3-46cb-85fd-5d123bfca189",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"2ee2335f-aef3-46cb-85fd-5d123bfca189"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete activity as Bob host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/activities/2ee2335f-aef3-46cb-85fd-5d123bfca189",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"2ee2335f-aef3-46cb-85fd-5d123bfca189"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test login and crud operations for photo entity",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Photo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Desktop/APIPhotos/bat3.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/photos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Photo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/photos/houh9nt3vhxesvc0bsn7",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos",
								"houh9nt3vhxesvc0bsn7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Main Photo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/api/photos/kcdyuovk08n68z4crpyn/setmain",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos",
								"kcdyuovk08n68z4crpyn",
								"setmain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile Tom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/tom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"tom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Photo Tom",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Desktop/APIPhotos/superman1.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/photos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"photos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test user bio and get profile",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/user/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Bio",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"Bob\",\n\t\"bio\": \"Bobs biography\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/profiles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test crud operations for Follow entity",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as tom and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('tom_token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"tom@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tom's Profile as Bob",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/tom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"tom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Follow tom",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/follow/tom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"tom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfollow tom",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/profiles/tom/follow",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"tom",
								"follow"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Followings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/bob?predicate=following",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"bob"
							],
							"query": [
								{
									"key": "predicate",
									"value": "following"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/bob?predicate=followers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"bob"
							],
							"query": [
								{
									"key": "predicate",
									"value": "followers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tom's Followings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/tom?predicate=following",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"tom"
							],
							"query": [
								{
									"key": "predicate",
									"value": "following"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tom's Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/follow/tom?predicate=followers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"follow",
								"tom"
							],
							"query": [
								{
									"key": "predicate",
									"value": "followers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Follow bob as tom",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{tom_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/profiles/bob/follow",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"follow"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test filter functionality for endpoints",
			"item": [
				{
					"name": "Login as bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('image');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}",
									"",
									"pm.test(\"Global token has been set\", function() {",
									"    var token = pm.globals.get('token');",
									"    pm.expect(token).to.eql(user.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities no queryString",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities limit 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?limit=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities limit 5 offset 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?limit=2&offset=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities bob is attending",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?isgoing=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "isgoing",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities bob is hosting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?ishost=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "ishost",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities starting in 2 months time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(2, 'months').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?startDate={{activityDate}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{activityDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities starting in 2 months time bob is going to",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(4, 'months').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?startDate={{activityDate}}&isGoing=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{activityDate}}"
								},
								{
									"key": "isGoing",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activities starting 3 months ago",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"// response to be 200",
									"pm.test(\"response is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"has all properties\", function() {",
									"    pm.expect(data.activities[0]).to.have.property('id');",
									"    pm.expect(data.activities[0]).to.have.property('title');",
									"    pm.expect(data.activities[0]).to.have.property('description');",
									"    pm.expect(data.activities[0]).to.have.property('date');",
									"    pm.expect(data.activities[0]).to.have.property('city');",
									"    pm.expect(data.activities[0]).to.have.property('venue');",
									"    pm.expect(data.activities[0]).to.have.property('attendees');",
									"});",
									"",
									"pm.test(\"activity count greater than zero\", function(){",
									"    pm.expect(data.activityCount).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require(\"moment\");\r",
									"\r",
									"pm.environment.set('activityDate', moment().add(-3, 'months').toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities?startDate={{activityDate}}&isGoing=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{activityDate}}"
								},
								{
									"key": "isGoing",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - all",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - past",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities?predicate=past",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							],
							"query": [
								{
									"key": "predicate",
									"value": "past"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - future",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities?predicate=future",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							],
							"query": [
								{
									"key": "predicate",
									"value": "future"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bob's Activities - hosting",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/profiles/bob/activities?predicate=hosting",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"profiles",
								"bob",
								"activities"
							],
							"query": [
								{
									"key": "predicate",
									"value": "hosting"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:5000"
		}
	]
}